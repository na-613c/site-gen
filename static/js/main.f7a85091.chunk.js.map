{"version":3,"sources":["components/common/Loader.jsx","utils/consts.js","components/login/Login.jsx","components/common/LeftArrow/LeftArrow.jsx","components/main/allWebSites/AllWebSites.jsx","components/main/Main.jsx","components/constructor/ResultPage/ResultPage.jsx","components/constructor/URLinput/URLinput.jsx","components/constructor/generatorEl/ElementForm/ElementForm.jsx","components/constructor/generatorEl/GeneratorEl.jsx","components/constructor/ConstructorPage.jsx","routes.js","components/AppRouter.jsx","components/header/Header.jsx","components/footer/MyFooter.jsx","App.js","firebase/myFirebase.js","utils/constructElements.js","utils/validationSave.js","model/ElementDOM.js","mobx/TmpPageService.js","mobx/FirebaseService.js","mobx/Store.js","index.js"],"names":["Loader","style","position","height","margin","top","left","marginRight","transform","className","MAIN_PAGE","LOGIN_PAGE","CONSTRUCTOR_PAGE","Login","align","justify","md","span","xs","src","alt","width","React","memo","LeftArrow","AllWebSites","firebaseService","isLoading","sites","removeWebsite","email","columns","title","dataIndex","key","render","url","to","fixed","data","placement","text","onConfirm","disabled","okText","cancelText","type","danger","map","el","uid","site","displayName","boxShadow","dataSource","loading","size","pagination","defaultPageSize","pageSizeOptions","transitionDuration","scroll","x","Step","Steps","observer","useContext","Context","store","direction","progressDot","current","description","display","ResultPage","pageDOMtoString","parse","string","id","Animate","component","transitionName","URLinput","setUrl","allUrl","Form","useForm","form","useEffect","resetFields","window","innerWidth","alert","field","status","help","includes","getStatusUrl","alignItems","Item","tooltip","name","label","onChange","value","target","trim","hasFeedback","validateStatus","addonBefore","maxLength","ElementForm","props","onClose","removeElement","pageDom","renderPageDOM","onChangeContent","setState","state","content","onChangeURL","getStatus","undefined","field1","this","field2","isHaveUrl","myInput","placeholder","closable","message","PureComponent","Panel","Collapse","GeneratorEl","tmpPageService","elements","header","cont","onClick","cursor","pageDomElements","getPageDOM","reverse","overflow","clean","saveBtn","isDuplicate","isEmptyData","length","btn","href","location","action","console","log","pathname","startsWith","notification","open","isValid","xl","lg","publicRoutes","path","Component","Main","privateRoutes","ConstructorPage","AppRouter","auth","useAuthState","exact","Header","user","setUser","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","padding","extra","borderRadius","photoURL","signOut","variant","Footer","Layout","MyFooter","textAlign","TmpPage","lazy","Content","loadingStore","otherComponent","pageDOM","fallback","isMobile","background","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","myFirebase","generateElement","BTN_LEFT","BTN_RIGHT","BTN_CENTER","IMG_LEFT","IMG_RIGHT","IMG_CENTER","IMG_JUSTIFY","H2_LEFT","H2_RIGHT","H2_CENTER","H2_JUSTIFY","H3_LEFT","H3_RIGHT","H3_CENTER","H3_JUSTIFY","P_LEFT","P_RIGHT","P_CENTER","P_JUSTIFY","validation","arr","filter","isEmptyContent","isEmptyURL","ElementDOM","DOMtoString","TmpPageService","_getPageDOMtoString","join","_getUniqKey","reduce","acc","curr","_addObj","elementDOM","push","addWebsite","makeAutoObservable","fb","FirebaseService","database","ref","child","remove","getURLs","on","snapshot","forEach","val","error","configure","enforceActions","createContext","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.f7a85091.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div style={{ position: 'relative', height: '100vh' }}>\r\n            <div style={{\r\n                margin: 0,\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n                <div className=\"lds-hourglass\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Loader;","export const MAIN_PAGE = '/'\r\nexport const LOGIN_PAGE = '/login'\r\nexport const CONSTRUCTOR_PAGE = '/constructor'","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n            <h1 style={{ align: 'center' }}>  Для создания сайта Вам надо зарегистрироваться </h1>\r\n            <Row justify=\"space-between\">\r\n                <Col md={{ span: 10 }} xs={{ span: 24 }}>\r\n                    <p>Это надо для того, что бы пользователь имел доступ к редактированию только своего сайта.</p>\r\n                    <p>Большинству приложений необходимо знать личность пользователя. Знание личности пользователя позволяет приложению безопасно сохранять пользовательские данные в облаке и обеспечивать одинаковую персонализированную работу на всех устройствах пользователя.</p>\r\n                    <p>Для хранения данных о пользователях используется Firebase Authentication.</p>\r\n                </Col>\r\n                <Col md={{ span: 10 }} xs={{ span: 24 }}>\r\n                    <img src=\"https://firebase.google.com/images/social.png\" alt=\"firebase\"\r\n                        style={{ width: '100%' }} />\r\n                </Col>\r\n            </Row>\r\n            <h2>После регистрации Вам будет доступно больше возможностей.</h2>\r\n            <p>С наилучшими пожеланияи. Администрация.</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Login);","import React from 'react';\r\nimport './LeftArrow.css';\r\n\r\nconst LeftArrow = () => {\r\n    return (\r\n        <div className=\"arrow-left\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(LeftArrow);","import React from 'react';\r\nimport { Table, Button, Popconfirm, Card } from 'antd';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nconst AllWebSites = ({ firebaseService }) => {\r\n    const { isLoading, sites, removeWebsite, email } = firebaseService\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Вебсайт',\r\n            dataIndex: 'site',\r\n            key: 'site',\r\n            width: 340,\r\n            render: (url) => <NavLink to={`${url}`} key={url}>{`https://na-613c.github.io/web-gen#/${url}`}</NavLink>,\r\n        }, {\r\n            title: 'Имя создателя',\r\n            dataIndex: 'displayName',\r\n            key: 'displayName',\r\n            width: 160,\r\n        }, {\r\n            title: 'Дейтсвие',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            fixed: 'right',\r\n            align: 'center',\r\n            width: 100,\r\n            render: (data) => (\r\n                <Popconfirm\r\n                    placement=\"topLeft\"\r\n                    title={text}\r\n                    onConfirm={() => removeWebsite(data.key)}\r\n                    disabled={email !== data.email}\r\n                    okText=\"Да\" cancelText=\"Нет\"\r\n                >\r\n                    <Button type=\"primary\" danger disabled={email !== data.email}>\r\n                        Удалить\r\n                </Button>\r\n                </Popconfirm>),\r\n        }]\r\n\r\n    const text = 'Вы действительно хотите удалить сайт?'\r\n\r\n    const data = sites.map((el) => {\r\n        return {\r\n            key: el.uid,\r\n            site: el.url,\r\n            displayName: el.displayName,\r\n            email: el.email\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <Card style={{ boxShadow: ' 0 10px 40px #c7d7b5', width: '100%' }}>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={data}\r\n                loading={isLoading}\r\n                size=\"small\"\r\n                pagination={{\r\n                    defaultPageSize: 5,\r\n                    pageSizeOptions: [5, 10, 20, 50, 100],\r\n                    size: 'default',\r\n                }}\r\n                style={{ transitionDuration: '.5s' }}\r\n                scroll={{ x: 500 }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default React.memo(AllWebSites);","import React, { useContext } from 'react';\r\nimport { Steps, Button, Row, Col, Space } from 'antd';\r\nimport LeftArrow from '../common/LeftArrow/LeftArrow'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CONSTRUCTOR_PAGE } from \"../../utils/consts\";\r\nimport AllWebSites from \"./allWebSites/AllWebSites\";\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from '../../index'\r\n\r\n\r\nconst { Step } = Steps;\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const { store } = useContext(Context);\r\n    const firebaseService = store.firebaseService;\r\n    \r\n    return (\r\n        <>\r\n            <Row>\r\n                <h1>Здесь Вы можете собрать простенький сайт</h1>\r\n            </Row>\r\n            <Row justify=\"space-between\" align=\"start\">\r\n                <Col md={{ span: 10 }} xs={{ span: 24 }}>\r\n                    <Row>\r\n                        <Space direction=\"vertical\">\r\n                            <Steps progressDot current={3} direction=\"vertical\">\r\n                                <Step title=\"Регистрация\" description=\"Для создания сайта необходиво войти через свой google аккаунт.\" />\r\n                                <Step title=\"Уникальный URL\" description=\"Далее надо указать URL по которому будет доступен ваш сайт.\" />\r\n                                <Step title=\"Сборка\" description=\"И последним этапом является то, что надо собрать сайт и сохранить.\" />\r\n                            </Steps>\r\n                            <Space direction=\"vertical\">\r\n                                <div style={{ display: 'inline' }}>\r\n                                    <NavLink to={CONSTRUCTOR_PAGE} >\r\n                                        <Button type=\"primary\" style={{ marginRight: 20 }}> Начать создание </Button>\r\n                                    </NavLink>\r\n                                    <LeftArrow />\r\n                                </div>\r\n                                <span style={{ display: 'inline-block' }}>  Нажми на кнопку сбоку, что бы начать создание сайта.</span>\r\n                            </Space>\r\n                        </Space>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={{ span: 13 }} xs={{ span: 24 }}>\r\n                    <AllWebSites firebaseService={{ ...firebaseService }} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(observer(Main));","import React from 'react';\r\nimport './ReultPage.css'\r\nimport parse from 'html-react-parser';\r\nimport Animate from 'rc-animate';\r\n\r\nconst ResultPage = ({ pageDOMtoString }) => {\r\n\r\n    const text = pageDOMtoString.map((el) => <div key={el.id}>{parse(el.string || '')}</div>);\r\n\r\n    return (\r\n        <div className=\"pic-details-demo\">\r\n            <div className=\"pic-details-demo-header\">\r\n                <ul><li></li><li></li><li></li><li></li><li></li></ul>\r\n                <Animate\r\n                    component=\"div\"\r\n                    transitionName=\"fade\"\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {text}\r\n                </Animate>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ResultPage);","import React, { useEffect } from 'react';\r\nimport { Input, Form } from 'antd';\r\n\r\n\r\nconst URLinput = ({ url, setUrl, allUrl }) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        (url === '') && form.resetFields();\r\n    }, [url, form]);\r\n\r\n    const onChangeUrl = ({ target: { value } }) => {\r\n        setUrl(value.trim())\r\n    }\r\n\r\n    const getStatusUrl = (url) => {\r\n        switch (url) {\r\n            case '': return {\r\n                status: 'error', help: 'Заполните поле.'\r\n            }\r\n            default:\r\n                if (allUrl.includes(url)) {\r\n                    return {\r\n                        status: 'error', help: 'Данный URL-путь уже занят.'\r\n                    }\r\n                } else {\r\n                    return {\r\n                        status: 'success', help: false\r\n                    }\r\n                }\r\n        }\r\n    }\r\n    \r\n    if (window.innerWidth < 590) alert('Для корректной работы, откройте с устройва с шириной экрана более 590 пикселей!')\r\n\r\n    let field = getStatusUrl(url);\r\n\r\n    return (\r\n        <Form\r\n            style={{ display: 'flex', alignItems: 'center' }}\r\n            form={form}\r\n        >\r\n            <Form.Item\r\n                tooltip=\"По этой ссылке будет распологаться Ваш сайт.\"\r\n                name=\"website\"\r\n                label=\"Cсылка\"\r\n                onChange={onChangeUrl}\r\n                hasFeedback\r\n                validateStatus={field.status}\r\n                help={field.help}\r\n            >\r\n                <Input\r\n                    addonBefore={window.innerWidth > 800 ? \"https://na-613c.github.io/web-gen\" : \"site-gen\"}\r\n                    maxLength={15}\r\n                    style={{ width: window.innerWidth > 800 ? 400 : 240 }}\r\n                    size='middle'\r\n                />\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default React.memo(URLinput);","import React from 'react';\r\nimport { Input, Form, Alert } from 'antd';\r\n\r\n\r\nclass ElementForm extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.pageDom = props.pageDom;\r\n        this.removeElement = props.removeElement;\r\n        this.renderPageDOM = props.renderPageDOM;\r\n        this.state = { content: props.pageDom.content, url: props.pageDom.url };\r\n    }\r\n\r\n    onClose = () => {\r\n        this.removeElement(this.pageDom.id)\r\n        this.renderPageDOM()\r\n    }\r\n\r\n    onChangeContent = ({ target: { value } }) => {\r\n        this.pageDom.onChangeContent(value.trim())\r\n        this.renderPageDOM()\r\n        this.setState({ ...this.state, content: value.trim() })\r\n    }\r\n\r\n    onChangeURL = ({ target: { value } }) => {\r\n        this.pageDom.onChangeURL(value.trim())\r\n        this.renderPageDOM()\r\n        this.setState({ ...this.state, url: value.trim() })\r\n    }\r\n\r\n    getStatus = (data) => {\r\n        return (data === '' || data === undefined)\r\n            ? { status: 'error', help: 'Заполните поле.' }\r\n            : { status: 'success', help: false }\r\n    }\r\n\r\n    render() {\r\n\r\n        let field1 = this.getStatus(this.state.content)\r\n        let field2 = this.pageDom.isHaveUrl ? this.getStatus(this.state.url) : {}\r\n\r\n        let myInput = (\r\n            <Form>\r\n                <Form.Item\r\n                    name=\"caption\"\r\n                    onChange={this.onChangeContent}\r\n                    hasFeedback\r\n                    validateStatus={field1.status}\r\n                    help={field1.help}\r\n                >\r\n                    <Input placeholder=\"Контент\" />\r\n                </Form.Item>\r\n\r\n                {this.pageDom.isHaveUrl &&\r\n                    (<Form.Item\r\n                        name=\"url\"\r\n                        onChange={this.onChangeURL}\r\n                        hasFeedback\r\n                        validateStatus={field2.status}\r\n                        help={field2.help}\r\n                    >\r\n                        <Input placeholder=\"URL\" />\r\n                    </Form.Item>)\r\n                }\r\n            </Form>\r\n        )\r\n\r\n        return (\r\n            < Alert\r\n                closable\r\n                onClose={this.onClose}\r\n                style={{ width: '100%' }}\r\n                message={this.pageDom.title}\r\n                description={myInput}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ElementForm;","import React from 'react';\r\nimport { Row, Col, Collapse } from 'antd';\r\nimport ElementForm from './ElementForm/ElementForm'\r\nimport Animate from 'rc-animate';\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nconst GeneratorEl = ({ tmpPageService }) => {\r\n\r\n    const elements = tmpPageService.elements.map((el, id) => {\r\n        return (\r\n            <Panel header={el.title} key={id}>\r\n                {el.content.map((cont, id) => {\r\n                    return (\r\n                        <p key={id} onClick={() => cont.content(cont.title)} style={{ cursor: 'pointer' }}>\r\n                            {cont.title}\r\n                        </p>\r\n                    )\r\n                })}\r\n            </Panel>\r\n        )\r\n    })\r\n\r\n    const pageDomElements = tmpPageService.getPageDOM().map((el) => {\r\n        return (\r\n            <ElementForm\r\n                pageDom={el}\r\n                key={el.id}\r\n                removeElement={tmpPageService.removeElement}\r\n                renderPageDOM={tmpPageService.renderPageDOM}\r\n            />\r\n        )\r\n    }).reverse();\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={12}>\r\n                <Collapse>\r\n                    {elements}\r\n                </Collapse>\r\n            </Col>\r\n            <Col span={12}>\r\n                <div style={{ height: 420, overflow: 'auto' }}>\r\n                    <Animate transitionName=\"fade\" component=\"div\" >\r\n                        {pageDomElements}\r\n                    </Animate>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(GeneratorEl);","import React, { useContext, useEffect } from 'react';\r\nimport { Row, Col, Button, Space, notification } from 'antd';\r\nimport ResultPage from './ResultPage/ResultPage';\r\nimport URLinput from './URLinput/URLinput'\r\nimport GeneratorEl from './generatorEl/GeneratorEl';\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from '../../index'\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\n\r\nconst ConstructorPage = () => {\r\n\r\n    const { store } = useContext(Context)\r\n    const allUrl = store.firebaseService.allUrl;\r\n    const tmpPageService = store.tmpPageService;\r\n\r\n    const { url, clean, setUrl, pageDOMtoString, saveBtn } = tmpPageService;\r\n\r\n    const isDuplicate = allUrl.includes(url);\r\n\r\n    let isEmptyData = true;\r\n    isEmptyData = !!pageDOMtoString.length || !!url.length;\r\n\r\n    const btn = (\r\n        <a href={`https://na-613c.github.io/web-gen#/${url}`} target='_blank' > Вы можете посетить сайт нажав на эту надпись.</a>\r\n    );\r\n\r\n    const onClickSaveBtn = () => {\r\n        isEmptyData = true;\r\n        saveBtn.onClick()\r\n        notification.open({\r\n            message: 'Сайт успешно создан',\r\n            description: 'Вы успешно создали сайт.',\r\n            btn,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => clean()\r\n    }, [])\r\n\r\n    const message = (location, action) => {\r\n        if (action === 'POP') {\r\n            console.log(\"Backing up...\")\r\n        }\r\n\r\n        return location.pathname.startsWith(\"/constructor\")\r\n            ? true\r\n            : isEmptyData ? `Все данные будут утеряны, Вы действительно хотите покинуть страницу?` : true\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Prompt message={message} />\r\n\r\n            <Space align=\"start\">\r\n                <URLinput url={url} setUrl={setUrl} allUrl={allUrl} />\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={onClickSaveBtn}\r\n                    disabled={(!saveBtn.isValid || isDuplicate)}\r\n                > Создать </Button>\r\n            </Space>\r\n\r\n            <Row>\r\n                <Col xl={{ span: 12 }} lg={{ span: 16 }} md={{ span: 20 }} xs={{ span: 24 }}>\r\n                    <GeneratorEl tmpPageService={{ ...tmpPageService }} />\r\n                </Col>\r\n                <Col xl={{ span: 12 }} lg={{ span: 24 }} md={{ span: 24 }} xs={{ span: 24 }}>\r\n                    <ResultPage pageDOMtoString={pageDOMtoString} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(observer(ConstructorPage));","import { LOGIN_PAGE, MAIN_PAGE, CONSTRUCTOR_PAGE } from './utils/consts'\r\nimport Login from \"./components/login/Login\";\r\nimport Main from \"./components/main/Main\";\r\nimport ConstructorPage from \"./components/constructor/ConstructorPage\";\r\n\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_PAGE,\r\n        Component: Login\r\n    },\r\n    {\r\n        path: MAIN_PAGE,\r\n        Component: Main\r\n    },]\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: CONSTRUCTOR_PAGE,\r\n        Component: ConstructorPage\r\n    },\r\n    {\r\n        path: MAIN_PAGE,\r\n        Component: Main\r\n    },]","import React, { useContext } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { privateRoutes, publicRoutes } from \"../routes\";\r\nimport { LOGIN_PAGE, MAIN_PAGE } from \"../utils/consts\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Context } from \"../index\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    const { auth } = useContext(Context)\r\n\r\n    const [user] = useAuthState(auth)\r\n\r\n    return user ?\r\n        (\r\n            <Switch>\r\n                {privateRoutes.map(({ path, Component }) =>\r\n                    <Route key={path} path={path} component={Component} exact={true} />\r\n                )}\r\n                <Redirect to={MAIN_PAGE} />\r\n            </Switch>\r\n        )\r\n        :\r\n        (\r\n            <Switch>\r\n                {publicRoutes.map(({ path, Component }) =>\r\n                    <Route key={path} path={path} component={Component} exact={true} />\r\n                )}\r\n                <Redirect to={LOGIN_PAGE} />\r\n            </Switch>\r\n        )\r\n};\r\n\r\nexport default React.memo(AppRouter);","import React, { useContext } from 'react';\r\nimport { PageHeader, Button, Space, Avatar, Popconfirm } from 'antd';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CONSTRUCTOR_PAGE, MAIN_PAGE } from \"../../utils/consts\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Context } from \"../../index\";\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const { auth, store } = useContext(Context)\r\n\r\n    const [user] = useAuthState(auth)\r\n\r\n    user && store.firebaseService.setUser(user)\r\n\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        const { user } = await auth.signInWithPopup(provider)\r\n        store.firebaseService.setUser(user)\r\n    }\r\n\r\n    const signOut = () => {\r\n        store.firebaseService.setUser({\r\n            displayName: null,\r\n            email: null\r\n        })\r\n        auth.signOut()\r\n    }\r\n    const text = 'Вы действительно хотите выйти?'\r\n\r\n    return (\r\n\r\n        <PageHeader\r\n            style={{ padding: '4px 24px' }}\r\n            title=\"Генератор сайтов\"\r\n            extra={[\r\n                <NavLink to={MAIN_PAGE} key='1'>Главная</NavLink>,\r\n                user && <NavLink to={CONSTRUCTOR_PAGE} key='2'>Конструктор</NavLink>,\r\n                user ?\r\n                    (\r\n                        <Space align=\"center\" key='3' style={{\r\n                            padding: 10,\r\n                            boxShadow: 'rgb(199 215 181) 0px 1px 4px',\r\n                            borderRadius: '50px 0 0 50px',\r\n                        }}>\r\n                            <Avatar src={user.photoURL} alt={user.displayName} />\r\n                            {window.innerWidth > 800 && <span>{user.displayName}</span>}\r\n                            <Popconfirm placement=\"topLeft\" title={text} onConfirm={signOut} okText=\"Да\" cancelText=\"Нет\">\r\n                                <Button variant={\"outlined\"}>Выйти</Button>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )\r\n                    :\r\n                    <Button onClick={login} type=\"primary\" key='4'>Войти</Button>,\r\n            ]} />\r\n    );\r\n}\r\n\r\nexport default React.memo(Header);","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst MyFooter = () => {\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}> Site Generator ©2021 Created by IVAN</Footer>\r\n    );\r\n}\r\n\r\nexport default React.memo(MyFooter);\r\n\r\n\r\n\r\n","import React, { useContext, Suspense } from 'react';\nimport { Context } from \"./index\";\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { HashRouter } from 'react-router-dom'\nimport Loader from \"./components/common/Loader\";\nimport AppRouter from \"./components/AppRouter\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport Header from './components/header/Header';\nimport MyFooter from './components/footer/MyFooter';\nimport { Layout } from 'antd';\nimport { Route, Switch } from \"react-router\";\nimport { observer } from 'mobx-react-lite'\n\n\nconst TmpPage = React.lazy(() => import('./components/tmpPage/TmpPage'));\n\nconst { Content } = Layout;\n\nconst App = () => {\n\n  const { auth, store } = useContext(Context)\n  const [user, loading, error] = useAuthState(auth)\n\n  const sites = store.firebaseService.sites;\n  const loadingStore = store.firebaseService.isLoading;\n\n  if (loading || loadingStore) {\n    return <Loader />\n  }\n\n  const renderComponnt = (pageDOM) => {\n    return (\n      <Suspense fallback={<Loader />}>\n        <TmpPage text={pageDOM} />\n      </Suspense>\n    )\n  }\n\n  const otherComponent = sites.map((site) => {\n    return (\n      <Route\n        exact={true}\n        key={site.uid}\n        path={`/${site.url}`}\n        render={() => renderComponnt(site.pageDOM)}\n      />\n    )\n  })\n\n  const isMobile = window.innerWidth < 640\n\n  return (\n    <HashRouter>\n      <Switch>\n        {otherComponent}\n        <Route>\n          <Header />\n          <Content style={{ padding: isMobile ? 10 : 50, background: '#f0f2f5' }}>\n            <Content style={{ background: '#fff', padding: isMobile ? 10 : 50 }}>\n              <AppRouter />\n            </Content>\n          </Content>\n          <MyFooter />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default React.memo(observer(App));\n","import firebase from \"firebase\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBOHf79y5XphsX61i_Q1dyO5RrZ5_srNp4\",\r\n    authDomain: \"site-generator-18b95.firebaseapp.com\",\r\n    databaseURL: \"https://site-generator-18b95-default-rtdb.firebaseio.com\",\r\n    projectId: \"site-generator-18b95\",\r\n    storageBucket: \"site-generator-18b95.appspot.com\",\r\n    messagingSenderId: \"719314808138\",\r\n    appId: \"1:719314808138:web:c3b402e9b8afd7911fa5b3\",\r\n    measurementId: \"G-GSXEHQD9N3\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\n\r\nconst auth = firebase.auth()\r\nconst firestore = firebase.firestore()\r\n\r\nexport const myFirebase = {\r\n    firebase,\r\n    auth,\r\n    firestore\r\n}","const generateElement = {\r\n    BTN_LEFT: ({ content = '', url }) => `<div class=\"html-left\"><a href=\"${url}\" align=\"left\"><button type=\"button\" class=\"ant-btn ant-btn-primary\">${content}</button></a></div>`,\r\n    BTN_RIGHT: ({ content = '', url }) => `<div class=\"html-right\"><a href=\"${url}\" align=\"right\"><button type=\"button\" class=\"ant-btn ant-btn-primary\">${content}</button></a></div>`,\r\n    BTN_CENTER: ({ content = '', url }) => `<div class=\"html-center\"><a href=\"${url}\" align=\"center\"><button type=\"button\" class=\"ant-btn ant-btn-primary\">${content}</button></a></div>`,\r\n\r\n    IMG_LEFT: ({ content = '', url }) => `<div class=\"html-left\"><img src=\"${url}\" alt=\"${content}\"></img></div>`,\r\n    IMG_RIGHT: ({ content = '', url }) => `<div class=\"html-right\"><img src=\"${url}\" alt=\"${content}\"></img></div>`,\r\n    IMG_CENTER: ({ content = '', url }) => `<div class=\"html-center\"><img src=\"${url}\" alt=\"${content}\" width='50%'></img></div>`,\r\n    IMG_JUSTIFY: ({ content = '', url }) => `<div class=\"html-center\"><img src=\"${url}\" width='100%' alt=\"${content}\"></img></div>`,\r\n\r\n    H2_LEFT: ({ content = '' }) => `<h2 align=\"left\">${content}</h2>`,\r\n    H2_RIGHT: ({ content = '' }) => `<h2 align=\"right\">${content}</h2>`,\r\n    H2_CENTER: ({ content = '' }) => `<h2 align=\"center\" width='50%' >${content}</h2>`,\r\n    H2_JUSTIFY: ({ content = '' }) => `<h2 align=\"justify\" width='100%' >${content}</h2>`,\r\n\r\n    H3_LEFT: ({ content = '' }) => `<h3 align=\"left\">${content}</h3>`,\r\n    H3_RIGHT: ({ content = '' }) => `<h3 align=\"right\">${content}</h3>`,\r\n    H3_CENTER: ({ content = '' }) => `<h3 align=\"center\" width='50%'>${content}</h3>`,\r\n    H3_JUSTIFY: ({ content = '' }) => `<h3 align=\"center\" width='100%'>${content}</h3>`,\r\n\r\n    P_LEFT: ({ content = '' }) => `<p align=\"left\">${content}</p>`,\r\n    P_RIGHT: ({ content = '' }) => `<p align=\"right\">${content}</p>`,\r\n    P_CENTER: ({ content = '' }) => `<p align=\"center\" width='50%'>${content}</p>`,\r\n    P_JUSTIFY: ({ content = '' }) => `<p align=\"center\" width='100%'>${content}</p>`,\r\n}\r\n\r\nexport default generateElement;\r\n\r\n\r\n","const validation = (url, arr) => {\r\n\r\n    if (url) {\r\n        let content = arr.map((el) => el.content)\r\n        let url = arr.filter((el) => el.isHaveUrl).map((el) => el.url)\r\n\r\n        let isEmptyContent = content.includes('') || content.includes(undefined)\r\n        let isEmptyURL = url.includes('') || url.includes(undefined)\r\n\r\n        return !(isEmptyContent || isEmptyURL || arr.length === 0)\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default validation;","export default class ElementDOM {\r\n\r\n    constructor(id, key, url, title) {\r\n        this.id = id\r\n        this.key = key\r\n        this.title = title\r\n        this.isHaveUrl = url\r\n    }\r\n\r\n    isHaveUrl\r\n    id\r\n    key\r\n    title\r\n    content\r\n    url\r\n    DOMtoString = '';\r\n\r\n    onChangeContent = (value) => {\r\n        this.content = value;\r\n    }\r\n\r\n    onChangeURL = (value) => {\r\n        this.url = value;\r\n    }\r\n\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport generateElement from \"../utils/constructElements\"\r\nimport validation from \"../utils/validationSave\"\r\nimport ElementDOM from \"../model/ElementDOM\"\r\n\r\n\r\nclass TmpPageService {\r\n    constructor(store) {\r\n        makeAutoObservable(this)\r\n        this.store = store;\r\n    };\r\n\r\n    pageDOM = [];\r\n    pageDOMtoString = [];\r\n    url = ''\r\n    store;\r\n    urls\r\n\r\n    renderPageDOM = () => {\r\n        this.pageDOMtoString = this.pageDOM.map((el) => {\r\n            let props = { content: el.content, url: el.url }\r\n            return {\r\n                id: el.id,\r\n                string: generateElement[el.key](props)\r\n            }\r\n        })\r\n\r\n        this.saveBtn = { ...this.saveBtn, isValid: validation(this.url, this.getPageDOM()) }\r\n    }\r\n\r\n    setUrl = (value) => {\r\n        this.url = value;\r\n        this.saveBtn = { ...this.saveBtn, isValid: validation(this.url, this.getPageDOM()) }\r\n    }\r\n\r\n    getPageDOM = () => this.pageDOM\r\n\r\n    _getPageDOMtoString = () => this.pageDOMtoString.map((el) => el.string).join('')\r\n\r\n\r\n    removeElement = (id) => {\r\n        const pageDOM = this.pageDOM;\r\n        this.pageDOM = pageDOM.filter((el) => el.id !== id)\r\n    }\r\n\r\n    _getUniqKey = () => {\r\n        const max = this.pageDOM.reduce((acc, curr) => acc.id > curr.id ? acc.id : curr.id, -1);\r\n        return max + 1;\r\n    }\r\n\r\n    _addObj = (key, title, url = false) => {\r\n        let elementDOM = new ElementDOM(this._getUniqKey(), key, url, title)\r\n        this.pageDOM.push(elementDOM)\r\n        this.saveBtn = { ...this.saveBtn, isValid: validation(this.url, this.getPageDOM()) }\r\n    }\r\n\r\n    clean = () => {\r\n        this.pageDOM = [];\r\n        this.pageDOMtoString = [];\r\n        this.url = ''\r\n    }\r\n\r\n    saveBtn = {\r\n        isValid: validation(this.url, this.getPageDOM()),\r\n        onClick: () => {\r\n            this.store.firebaseService.addWebsite({\r\n                pageDOM: this._getPageDOMtoString(),\r\n                url: this.url\r\n            })\r\n            this.clean()\r\n        }\r\n    }\r\n\r\n    elements = [\r\n        {\r\n            title: 'Кнопки',\r\n            content: [\r\n                {\r\n                    title: 'Левая кнопка',\r\n                    content: (title) => this._addObj('BTN_LEFT', title, true)\r\n                }, {\r\n                    title: 'Центральная кнопка',\r\n                    content: (title) => this._addObj('BTN_CENTER', title, true)\r\n                }, {\r\n                    title: 'Правая кнопка',\r\n                    content: (title) => this._addObj('BTN_RIGHT', title, true)\r\n                }\r\n            ]\r\n        }, {\r\n            title: 'Изображения',\r\n            content: [\r\n                {\r\n                    title: 'Левая картинка',\r\n                    content: (title) => this._addObj('IMG_LEFT', title, true)\r\n                }, {\r\n                    title: 'Правая картинка',\r\n                    content: (title) => this._addObj('IMG_RIGHT', title, true)\r\n                }, {\r\n                    title: 'Центральная картинка',\r\n                    content: (title) => this._addObj('IMG_CENTER', title, true)\r\n                }, {\r\n                    title: 'На всю ширину картинка',\r\n                    content: (title) => this._addObj('IMG_JUSTIFY', title, true)\r\n                }\r\n            ]\r\n        }, {\r\n            title: 'Заголовок',\r\n            content: [\r\n                {\r\n                    title: 'Левый текст',\r\n                    content: (title) => this._addObj('H2_LEFT', title)\r\n                }, {\r\n                    title: 'Правый текст',\r\n                    content: (title) => this._addObj('H2_RIGHT', title)\r\n                }, {\r\n                    title: 'Центральный текст',\r\n                    content: (title) => this._addObj('H2_CENTER', title)\r\n                }, {\r\n                    title: 'На всю ширину текст',\r\n                    content: (title) => this._addObj('H2_JUSTIFY', title)\r\n                }\r\n            ]\r\n        }, {\r\n            title: 'Подзаголовок',\r\n            content: [\r\n                {\r\n                    title: 'Левый текст',\r\n                    content: (title) => this._addObj('H3_LEFT', title)\r\n                }, {\r\n                    title: 'Правый текст',\r\n                    content: (title) => this._addObj('H3_RIGHT', title)\r\n                }, {\r\n                    title: 'Центральный текст',\r\n                    content: (title) => this._addObj('H3_CENTER', title)\r\n                }, {\r\n                    title: 'На всю ширину текст',\r\n                    content: (title) => this._addObj('H3_JUSTIFY', title)\r\n                }\r\n            ]\r\n        }, {\r\n            title: 'Обычный текст',\r\n            content: [\r\n                {\r\n                    title: 'Левый текст',\r\n                    content: (title) => this._addObj('P_LEFT', title)\r\n                }, {\r\n                    title: 'Правый текст',\r\n                    content: (title) => this._addObj('P_RIGHT', title)\r\n                }, {\r\n                    title: 'Центральный текст',\r\n                    content: (title) => this._addObj('P_CENTER', title)\r\n                }, {\r\n                    title: 'На всю ширину текст',\r\n                    content: (title) => this._addObj('P_JUSTIFY', title)\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n}\r\n\r\nexport default TmpPageService;","import { makeAutoObservable } from 'mobx';\r\nimport { myFirebase } from '../firebase/myFirebase'\r\n\r\nconst fb = myFirebase.firebase;\r\n\r\nclass FirebaseService {\r\n\r\n    sites = [];\r\n    isLoading = true;\r\n    email\r\n    displayName\r\n    allUrl = []\r\n\r\n    constructor() {\r\n\r\n        makeAutoObservable(this)\r\n        fb.database().ref().on('value', (snapshot) => {\r\n            const sites = [];\r\n\r\n            snapshot.forEach((child) => {\r\n                sites.push({\r\n                    uid: child.key,\r\n                    ...child.val()\r\n                });\r\n            });\r\n\r\n            this.sites = sites.reverse();\r\n\r\n            this.allUrl = sites.map((val) => val.url);\r\n\r\n            this.isLoading = false;\r\n        }, (error) => {\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    addWebsite = (site) => {\r\n        fb.database().ref().push({\r\n            ...site,\r\n            email: this.email,\r\n            displayName: this.displayName\r\n        });\r\n    }\r\n\r\n    removeWebsite = (uid) => {\r\n        fb.database().ref().child(uid).remove();\r\n    }\r\n\r\n    setUser = (user) => {\r\n        this.email = user.email;\r\n        this.displayName = user.displayName;\r\n    }\r\n\r\n    getURLs = () => {\r\n        return this.allUrl\r\n    }\r\n}\r\n\r\nexport default FirebaseService;","import { makeAutoObservable, configure } from \"mobx\"\r\n\r\nimport TmpPageService from \"./TmpPageService\";\r\nimport FirebaseService from \"./FirebaseService\";\r\n\r\n\r\nconfigure({ enforceActions: 'observed' });\r\n\r\nclass Store {\r\n    constructor() {\r\n        this.tmpPageService = new TmpPageService(this);\r\n        this.firebaseService = new FirebaseService(this);\r\n\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    tmpPageService;\r\n    firebaseService;\r\n\r\n}\r\n\r\n\r\nexport default new Store();","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { myFirebase } from './firebase/myFirebase'\n\nimport store from './mobx/Store'\n\nexport const Context = createContext(null)\n\n\nReactDOM.render(\n  <Context.Provider value={{ ...myFirebase, store }}>\n    <App />\n  </Context.Provider>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}